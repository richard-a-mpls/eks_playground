name: Setup and Configure EKS Cluster

on:
  workflow_dispatch:
  
jobs:
  setup_eks_cluster:
    name: Setup EKS Cluster
    runs-on: ubuntu-latest
    steps:
    - name: install eksctl cli
      run: |
        curl --silent --location "https://github.com/weaveworks/eksctl/releases/latest/download/eksctl_$(uname -s)_amd64.tar.gz" | tar xz -C /tmp
        mv /tmp/eksctl /usr/local/bin
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-region: us-east-1
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    - name: create eks cluster
      run: |
        eksctl create cluster --name=eksdemo1 \
                      --region=us-east-1 \
                      --zones=us-east-1a,us-east-1b \
                      --without-nodegroup

  setup_iam_profiles:
    name: Setup IAM Profiles
    runs-on: ubuntu-latest
    needs:
      - setup_eks_cluster
    steps:
      - name: install eksctl cli
        run: |
          curl --silent --location "https://github.com/weaveworks/eksctl/releases/latest/download/eksctl_$(uname -s)_amd64.tar.gz" | tar xz -C /tmp
          mv /tmp/eksctl /usr/local/bin
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: us-east-1
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      - name: setup IAM profiles
        run: | 
          eksctl utils associate-iam-oidc-provider \
                        --region us-east-1 \
                        --cluster eksdemo1 \
                        --approve

  setup_eks_node_groups:
    name: Setup EKS Node Groups
    runs-on: ubuntu-latest
    needs:
      - setup_eks_cluster
    steps:
      - name: install eksctl cli
        run: |
          curl --silent --location "https://github.com/weaveworks/eksctl/releases/latest/download/eksctl_$(uname -s)_amd64.tar.gz" | tar xz -C /tmp
          mv /tmp/eksctl /usr/local/bin
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: us-east-1
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      - name: setup eks node groups
        run: | 
          eksctl create nodegroup --cluster=eksdemo1 \
                         --region=us-east-1 \
                         --name=eksdemo1-ng-public1 \
                         --node-type=t3.medium \
                         --nodes=1 \
                         --nodes-min=1 \
                         --nodes-max=2 \
                         --node-volume-size=20 \
                         --ssh-access \
                         --ssh-public-key=kube-demo \
                         --managed \
                         --asg-access \
                         --external-dns-access \
                         --full-ecr-access \
                         --appmesh-access \
                         --alb-ingress-access

  setup_namespaces:
    name: Setup Namespaces
    runs-on: ubuntu-latest
    needs:
      - setup_eks_cluster
    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: us-east-1
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      - name: update kubeconfig
        run: |
          aws eks update-kubeconfig --name eksdemo1 --region us-east-1
      - name: create dev namespace
        run: kubectl create namespace travlr-profile-api-dev
      - name: created prod namespace
        run: kubectl create namespace travlr-profile-api-prod
      - name: create dev namespace
        run: kubectl create namespace travlr-web-dev
      - name: created prod namespace
        run: kubectl create namespace travlr-web-prod

  setup_service_accounts:
    name: Setup Service Accounts
    runs-on: ubuntu-latest
    needs:
      - setup_namespaces
    steps:
      - name: update kubeconfig
        run: aws eks update-kubeconfig --name eksdemo1 --region us-east-1
      - name: Setup Service Account
        run: |
          eksctl create iamserviceaccount --name sqs-account --namespace travlr-profile-api-dev --cluster eksdemo1 --role-name "sqs-account" \
          --attach-policy-arn arn:aws:iam::121441139723:policy/sqs-account --approve

  setup_nginx_ingress_controller:
    name: Setup Nginx Ingress Controller
    runs-on: ubuntu-latest
    needs:
      - setup_eks_node_groups
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: us-east-1
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      - name: update kubeconfig
        run: |
          aws eks update-kubeconfig --name eksdemo1 --region us-east-1
      - name: setup nginx ingress controller
        run: kubectl apply -f deploy.yaml

#https://towardsdatascience.com/how-to-set-up-ingress-controller-in-aws-eks-d745d9107307:
#https://aws.amazon.com/blogs/containers/exposing-kubernetes-applications-part-3-nginx-ingress-controller/:
  # https://aws.amazon.com/premiumsupport/knowledge-center/eks-access-kubernetes-services/: